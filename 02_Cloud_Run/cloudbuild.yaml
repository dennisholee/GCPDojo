steps:
# [Enable GCP APIs]
- name: 'gcr.io/cloud-builders/gcloud'
  args: ['services', 'enable', 'serviceusage.googleapis.com']
- name: 'gcr.io/cloud-builders/gcloud'
  args: ['services', 'enable', 'iam.googleapis.com']
- name: 'gcr.io/cloud-builders/gcloud'
  args: ['services', 'enable', 'cloudresourcemanager.googleapis.com']
- name: 'gcr.io/cloud-builders/gcloud'
  args: ['services', 'enable', 'artifactregistry.googleapis.com']
- name: 'gcr.io/cloud-builders/gcloud'
  args: ['services', 'enable', 'cloudfunctions.googleapis.com']
- name: 'gcr.io/cloud-builders/gcloud'
  args: ['services', 'enable', 'run.googleapis.com']

# [GCS For Terraform Backend]
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'gsutil'
  args:
    - 'mb'
    - 'gs://${PROJECT_ID}-tfstate'
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'gsutil'
  args:
    - 'versioning'
    - 'set'
    - 'on'
    - 'gs://${project_id}-tfstate'

# [terraform]
- name: 'hashicorp/terraform:0.12.29'
  entrypoint: 'sh'
  args:
    - '-c'
    - |
        cd terraform
        terraform init
        echo "=================================================="
        echo " terraform init finished" 
        echo "=================================================="

- name: 'hashicorp/terraform:0.12.29'
  entrypoint: 'sh'
  args:
    - '-c'
    - |
        cd terraform
        terraform plan -var project_id=${project_id} -var zone=${_zone} -var region=${_region} -var app=cloudrun -var env=dev 
        echo "=================================================="
        echo " terraform plan finished" 
        echo "=================================================="

- name: 'hashicorp/terraform:0.12.29'
  entrypoint: 'sh'
  args:
    - '-c'
    - |
        cd terraform
        terraform apply -auto-approve -var project_id=${project_id} -var zone=${_zone} -var region=${_region} -var app=cloudrun -var env=dev 
        echo "=================================================="
        echo " terraform apply finished" 
        echo "=================================================="


# [web]
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-east1-docker.pkg.dev/$project_id/cloudrun-dev-repository/helloworld', '.']
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-east1-docker.pkg.dev/$project_id/cloudrun-dev-repository/helloworld']
- name: 'gcr.io/cloud-builders/gcloud'
  args:
    - 'run'
    - 'deploy' 
    - 'helloworld'
    - '--image'
    - 'us-east1-docker.pkg.dev/$project_id/cloudrun-dev-repository/helloworld'
    - '--set-env-vars'
    - 'name=gamma'
    - '--allow-unauthenticated'
    - '--platform'
    - 'managed'
    - '--region'
    - 'us-east1'

# [processor]
- name: 'gcr.io/cloud-builders/gcloud'
  args:
    - 'functions'
    - 'deploy'
    - 'processor'
    - '--region'
    - 'us-east1'
    - '--trigger-topic'
    - 'cloudrun-dev-pub-msg-topic'
    - '--runtime'
    - 'nodejs10'
    - '--entry-point'
    - 'process'
    - '--source'
    - 'processor'

substitutions:
  _region: us-east1
  _zone: us-east1-a
   
images:
- 'us-east1-docker.pkg.dev/$PROJECT_ID/cloudrun-dev-repository/helloworld'
